buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.spring.io/libs-milestone" }
        maven { url "https://repo.spring.io/libs-snapshot" }
        maven { url "https://plugins.gradle.org/m2/" }         
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
        classpath "io.freefair.gradle:maven-plugin:${project.gradleMavenPluginVersion}"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'https://build.shibboleth.net/nexus/content/repositories/releases/' }
    maven { url "https://repo.spring.io/milestone/" }
    maven { url "https://oss.jfrog.org/artifactory/oss-snapshot-local" }
}

apply plugin: "io.freefair.war-overlay"
apply plugin: "war"
apply plugin: "org.springframework.boot"
apply plugin: "eclipse"
apply plugin: "idea"

def casMgmtServerVersion = project.'casmgmt.version'

project.ext."casMgmtServerVersion" = casMgmtServerVersion

eclipse {
    classpath {
       downloadSources = true
       downloadJavadoc = true
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

war {
    entryCompression = ZipEntryCompression.STORED
}

springBoot {
    mainClassName = "org.apereo.cas.mgmt.web.CasManagementWebApplication"
}

bootWar {
	if (project.hasProperty('executable')) {
    	launchScript()
	}

	archiveName "cas-management.war"
    baseName "cas-management"

    excludeDevtools = false
}

bootRun {
    sourceResources sourceSets.main
    classpath = sourceSets.main.runtimeClasspath
}

dependencies {
    // Other CAS Management dependencies/modules may be listed here...
}

task run(group: "build", description: "Run the CAS managment web application in embedded container mode") {
    dependsOn build
    doLast {
        def casRunArgs = Arrays.asList("-Xmx2048M -XX:+TieredCompilation -XX:TieredStopAtLevel=1".split(" "))
        javaexec {
            main = "-jar"
            jvmArgs = casRunArgs
            args = ["build/libs/cas-management.war"]
            logger.info "Started ${commandLine}"
        }
    }
}

bootWar {
    entryCompression = ZipEntryCompression.STORED
    overlays {
        // https://docs.freefair.io/gradle-plugins/current/reference/#_io_freefair_war_overlay
        // Note: The "excludes" property is only for files in the war dependency.
        // If a jar is excluded from the war, it could be brought back into the final war as a dependency
        // of non-war dependencies. Those should be excluded via normal gradle dependency exclusions.
        cas {
            from "org.apereo.cas:cas-mgmt-webapp${project.appServer}:${casMgmtServerVersion}@war"
            provided = false
            excludes = []
        }
    }    
}

task copyCasConfiguration(type: Copy, group: "build", description: "Copy the CAS configuration from this project to /etc/cas/config") {
    from "etc/cas/config"
    into new File('/etc/cas/config').absolutePath
    doFirst {
        new File('/etc/cas/config').mkdirs()
    }
}
